// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";

function update(state, value) {
  return {
          title: value,
          body: state.body,
          tags: state.tags,
          postAuthorId: state.postAuthorId
        };
}

function validator_validate(param) {
  if (param.title === "") {
    return /* Error */Block.__(1, ["Title is required"]);
  } else {
    return /* Ok */Block.__(0, [/* Valid */0]);
  }
}

var validator = {
  field: /* Title */0,
  strategy: /* OnFirstSuccessOrFirstBlur */3,
  dependents: undefined,
  validate: validator_validate
};

var TitleField = {
  update: update,
  validator: validator
};

function update$1(state, value) {
  return {
          title: state.title,
          body: value,
          tags: state.tags,
          postAuthorId: state.postAuthorId
        };
}

function validator_validate$1(param) {
  if (param.body === "") {
    return /* Error */Block.__(1, ["Body is required"]);
  } else {
    return /* Ok */Block.__(0, [/* Valid */0]);
  }
}

var validator$1 = {
  field: /* Body */1,
  strategy: /* OnFirstSuccessOrFirstBlur */3,
  dependents: undefined,
  validate: validator_validate$1
};

var BodyField = {
  update: update$1,
  validator: validator$1
};

function update$2(state, value) {
  return {
          title: state.title,
          body: state.body,
          tags: value,
          postAuthorId: state.postAuthorId
        };
}

function validator_validate$2(param) {
  if (param.tags === "") {
    return /* Error */Block.__(1, ["Tags are required"]);
  } else {
    return /* Ok */Block.__(0, [/* Valid */0]);
  }
}

var validator$2 = {
  field: /* Tags */2,
  strategy: /* OnFirstSuccessOrFirstBlur */3,
  dependents: undefined,
  validate: validator_validate$2
};

var TagsField = {
  update: update$2,
  validator: validator$2
};

var validators_001 = /* :: */[
  validator$1,
  /* :: */[
    validator$2,
    /* [] */0
  ]
];

var validators = /* :: */[
  validator,
  validators_001
];

export {
  TitleField ,
  BodyField ,
  TagsField ,
  validators ,
  
}
/* No side effect */
